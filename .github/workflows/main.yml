name: CI

on: 
  push:
    branches:
    - master
    - dev
  pull_request:
    branches:
    - master
    - dev

jobs:
  windows:
    name: Build on ${{ matrix.os }} with ${{ matrix.compiler_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        compiler_version: ['default']
        os: [windows-2016, windows-2019, windows-latest]
        
    steps:
    - name: Compile and test in Debug.
      run: bash compile.sh Debug
    - name: Compile and test in Release.
      run: bash compile.sh Release
    - name: Compile and test in RelWithDebInfo.
      run: bash compile.sh RelWithDebInfo
    - name: Compile and test in MinSizeRel.
      run: bash compile.sh MinSizeRel
      
  macOS:
    name: Build on ${{ matrix.os }} with ${{ matrix.compiler_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        compiler_version: ['default']
        os: [macOS-10.14, macOS-latest]
        
    steps:
    - name: Compile and test in Debug.
      run: bash compile.sh Debug
    - name: Compile and test in Release.
      run: bash compile.sh Release
    - name: Compile and test in RelWithDebInfo.
      run: bash compile.sh RelWithDebInfo
    - name: Compile and test in MinSizeRel.
      run: bash compile.sh MinSizeRel
  
  linux:
    name: Build on ${{ matrix.os }} with ${{ matrix.compiler_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        compiler_version: ['default']
        os: [ubuntu-16.04, ubuntu-18.04, ubuntu-latest]
        
    steps:
    - name: Compile and test in Debug.
      run: bash compile.sh Debug
    - name: Compile and test in Release.
      run: bash compile.sh Release
    - name: Compile and test in RelWithDebInfo.
      run: bash compile.sh RelWithDebInfo
    - name: Compile and test in MinSizeRel.
      run: bash compile.sh MinSizeRel
